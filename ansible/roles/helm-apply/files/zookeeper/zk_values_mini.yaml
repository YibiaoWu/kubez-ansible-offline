image:
  registry: docker.io
  repository: bitnami/zookeeper
  tag: 3.7.0-debian-10-r70
  pullPolicy: IfNotPresent
  debug: false
hostAliases: []
clusterDomain: cluster.local
extraDeploy: []
commonLabels: {}
commonAnnotations: {}
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r115
    pullPolicy: IfNotPresent
  resources: {}
updateStrategy: RollingUpdate
podDisruptionBudget:
  maxUnavailable: 1
podManagementPolicy: Parallel
replicaCount: 1
containerPort: 2181
tlsContainerPort: 3181
followerContainerPort: 2888
electionContainerPort: 3888
minServerId: 1
tickTime: 2000
initLimit: 10
syncLimit: 10
maxClientCnxns: 60
fourlwCommandsWhitelist: srvr, mntr, ruok
listenOnAllIPs: false
allowAnonymousLogin: true
autopurge:
  snapRetainCount: 3
  purgeInterval: 6
maxSessionTimeout: 120000
auth:
  enabled: false
  clientUser:
  clientPassword:
  serverUsers:
  serverPasswords:
heapSize: 1024
logLevel: ERROR
dataLogDir: /bitnami/zookeeper/dataLog
dataDir: /bitnami/zookeeper/data
extraEnvVars:
  - name: TZ
    value: "Asia/Shanghai"
service:
  type: ClusterIP
  port: 2181
  followerPort: 2888
  electionPort: 3888
  nodePorts:
    client: ""
    clientTls: ""
  publishNotReadyAddresses: true
  tlsClientPort: 3181
  disableBaseClientPort: false
  annotations: {}
  headless:
    annotations: {}
tls:
  client:
    enabled: false
    autoGenerated: false
    existingSecret:
    keystorePath: /opt/bitnami/zookeeper/config/certs/client/zookeeper.keystore.jks
    truststorePath: /opt/bitnami/zookeeper/config/certs/client/zookeeper.truststore.jks
    passwordsSecretName:
    keystorePassword: ''
    truststorePassword: ''
  quorum:
    enabled: false
    autoGenerated: false
    existingSecret:
    keystorePath: /opt/bitnami/zookeeper/config/certs/quorum/zookeeper.keystore.jks
    truststorePath: /opt/bitnami/zookeeper/config/certs/quorum/zookeeper.truststore.jks
    passwordsSecretName:
    keystorePassword: ''
    truststorePassword: ''
  resources: {}
serviceAccount:
  create: false
  automountServiceAccountToken: true
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
initContainers: []
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}
  selector: {}
  dataLogDir:
    size: 8Gi
    selector: {}
podAffinityPreset: ''
podAntiAffinityPreset: hard
nodeAffinityPreset:
  type: ''
  key: ''
  values: []
affinity: {}
nodeSelector: {}
tolerations: []
podLabels: {}
podAnnotations: {}
priorityClassName: ''
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  probeCommandTimeout: 2
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  probeCommandTimeout: 2
customLivenessProbe: {}
customReadinessProbe: {}
networkPolicy:
  enabled: false
metrics:
  enabled: false
  containerPort: 9141
  service:
    type: ClusterIP
    port: 9141
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '{{ .Values.metrics.service.port }}'
      prometheus.io/path: '/metrics'
  serviceMonitor:
    enabled: false
    namespace:
  prometheusRule:
    enabled: false
    namespace:
    rules: []
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity
